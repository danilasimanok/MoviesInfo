@page "/img"

@using MoviesInfo.Data
@inject Connection connection

@using System.Net
@using System.Text.RegularExpressions

<h3>ImgTestComponent</h3>

Input film id in the field below.

<br />
<br />

<input type="text" @bind="request" />

<br />
<br />

<button class="btn btn-primary" @onclick="processRequest">Search</button>

<br />
<br />

<h4>Result</h4>
@if (this.imgUrl.Equals("") || this.description.Equals(""))
{
    <p>Nothing to show.</p>
}
else
{
    <img height="300" width="300" src=@this.imgUrl />
    <p>
        DESCRIPTION:
        <br />
        @this.description
    </p>
}

@if (this.exceptionOccured)
{
    <p style="color:red">Default error occured</p>
}

@code {
    private String request = "";

    private String imgUrl = "",
        description = "";

    private bool exceptionOccured = false;

    private Regex imgRegex = new Regex("\"image\": \".*\","),
        descriptionRegex = new Regex("\"description\": \".*\",");

    private int imgBeg = 10,
        descriptionBeg = 16;

    public static String getSubstring(String str, Regex regex, int beg)
    {
        String result = regex.Match(str).ToString();
        return result.Substring(beg, result.Length - beg - 2);
    }

    public async Task processRequest()
    {
        this.exceptionOccured = false;
        this.imgUrl = this.description = "";
        try
        {
            String response = await connection.executeRequestAsync(this.request);
            this.imgUrl = getSubstring(response, this.imgRegex, this.imgBeg);
            this.description = getSubstring(response, this.descriptionRegex, this.descriptionBeg);
        }
        catch (WebException)
        {
            this.exceptionOccured = true;
        }
    }
}
